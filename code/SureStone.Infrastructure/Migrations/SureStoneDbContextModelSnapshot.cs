// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Insurance.Infrastructure.Persistence;

#nullable disable

namespace Insurance.Infrastructure.Migrations
{
    [DbContext(typeof(SureStoneDbContext))]
    partial class SureStoneDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SureStone.Domain.Entities.ArchivedFiles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("FileDirectory")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("file_directory");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("filename");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("file_path");

                    b.Property<bool>("IsDone")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_done");

                    b.Property<bool>("FileNotFound")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("file_not_found");

                    b.HasKey("Id");

                    b.ToTable("archived_files");
                });

            modelBuilder.Entity("SureStone.Domain.Entities.CrawledFiles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("creation_datetime");

                    b.Property<string>("FileDirectory")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("file_directory");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("filename");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("file_path");

                    b.Property<bool>("IsMicrosoftExtension")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_microsoft");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_modified_datetime");

                    b.Property<string>("MimeType")
                        .HasColumnType("longtext")
                        .HasColumnName("mime_type");

                    b.Property<DateTime?>("OriginCreationDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("origin_creation_datetime");

                    b.Property<DateTime?>("OriginLastModifiedDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("origin_last_modified_datetime");

                    b.HasKey("Id");

                    b.ToTable("crawled_files");
                });
#pragma warning restore 612, 618
        }
    }
}
